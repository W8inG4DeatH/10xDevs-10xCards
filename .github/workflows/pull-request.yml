name: Pull Request Validation

on:
  pull_request:
    branches: [master, main]

jobs:
  # Job do lintowania kodu
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: |
          echo "🔍 Running ESLint..."
          npm run lint
          echo "✅ Linting completed successfully"

  # Job do testów jednostkowych z coverage
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: |
          echo "🧪 Running unit tests with coverage..."
          npm run test:coverage
          echo "✅ Unit tests completed"

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  # Job do testów e2e z coverage
  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    
    env:
      # Zmienne środowiskowe dla środowiska integration
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      BASE_URL: ${{ secrets.BASE_URL || 'http://localhost:4321' }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: |
          echo "🌐 Installing Playwright browsers..."
          npx playwright install chromium firefox webkit
          echo "✅ Playwright browsers installed"

      - name: Start development server
        run: |
          echo "🚀 Starting development server..."
          npm run dev &
          sleep 10
          echo "✅ Development server started"

      - name: Run E2E tests
        run: |
          echo "🎭 Running E2E tests..."
          npm run test:e2e
          echo "✅ E2E tests completed"

      - name: Upload E2E test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-reports
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  # Job komentujący status PR
  status-comment:
    name: PR Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always() && needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success'
    permissions:
      pull-requests: write
      
    steps:
      - name: Create success comment
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ✅ Pull Request Validation Successful
            
            **Status Report:**
            - 🔍 **Linting**: ✅ Passed
            - 🧪 **Unit Tests**: ✅ Passed  
            - 🎭 **E2E Tests**: ✅ Passed
            
            **Coverage Reports:**
            - Unit test coverage available in artifacts
            - E2E test reports available in artifacts
            
            🎉 **All checks passed!** This PR is ready for review.
            
            ---
            *Generated by GitHub Actions*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Job komentujący błędy
  failure-comment:
    name: PR Failure Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always() && (needs.lint.result != 'success' || needs.unit-test.result != 'success' || needs.e2e-test.result != 'success')
    permissions:
      pull-requests: write
      
    steps:
      - name: Create failure comment
        uses: actions/github-script@v7
        with:
          script: |
            const lintStatus = '${{ needs.lint.result }}' === 'success' ? '✅ Passed' : '❌ Failed';
            const unitStatus = '${{ needs.unit-test.result }}' === 'success' ? '✅ Passed' : '❌ Failed';
            const e2eStatus = '${{ needs.e2e-test.result }}' === 'success' ? '✅ Passed' : '❌ Failed';
            
            const comment = `## ❌ Pull Request Validation Failed
            
            **Status Report:**
            - 🔍 **Linting**: ${lintStatus}
            - 🧪 **Unit Tests**: ${unitStatus}
            - 🎭 **E2E Tests**: ${e2eStatus}
            
            **Next Steps:**
            Please review the failed checks above and fix any issues before requesting another review.
            
            **Available Artifacts:**
            - Check the Actions tab for detailed logs and coverage reports
            
            ---
            *Generated by GitHub Actions*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 
